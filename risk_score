const axios = require("axios");

exports.onExecutePostLogin = async (event, api) => {
  const { API_KEY, TENANT_NAME, RISK_SCORE_THRESHOLD } = event.secrets;

  if (!API_KEY || !TENANT_NAME) {
    console.log("Missing required config, skipping.");
    return;
  }

  const riskScoreBody = {
    userEmail: event.user.email,
    userEmailVerified: event.user.email_verified,
    userPhone: event.user.phone_number,
    userPhoneVerified: event.user.phone_verified,
    loginIp: event.request.ip,
    loginUserAgent: event.request.user_agent,
    location: {
      latitude: event.request.geoip?.latitude,
      longitude: event.request.geoip?.longitude,
      country_code: event.request.geoip?.countryCode,
      city_name: event.request.geoip?.cityName,
    },
  };

  let apiResponse;
  try {
    apiResponse = await axios.post(
      `https://api.${TENANT_NAME}.example.com/v2/risk`,
      riskScoreBody,
      {
        headers: {
          Authorization: `Bearer ${API_KEY}`,
        },
      }
    );
  } catch (error) {
    api.access.deny("api_request_failed", "Something went wrong, please login again.");
    return;
  }

  if (RISK_SCORE_THRESHOLD && apiResponse.data.score > parseInt(RISK_SCORE_THRESHOLD, 10)) {
    api.access.deny("risk_score_threshold_reached", "Login not allowed.");
    return;
  }

  api.idToken.setCustomClaim("https://risk/score", apiResponse.data.score);
};
